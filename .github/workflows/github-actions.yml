name: Frontend/Backend pipeline
run-name: Frontend/Backend pipeline
on: [push]
jobs:
  fe-pipeline:
    name: Frontend Pipeline
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/core
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Cache node_modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-fe-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Install dependencies
        run: npm install
      - name: Lint
        run: npm run lint
      - name: Compile
        run: npm run tsc
      - name: Test
        run: npm run test
      - name: Build
        run: npm run build
  be-pipeline:
    name: Backend Pipeline
    runs-on: ubuntu-latest
    env:
      AUTH_SECRET: testsecret
      AUTH_SUGAR: testsugar
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_HOST: localhost
      NODE_ENV: test
    defaults:
      run:
       working-directory: ./api/rest/ts
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Cache node_modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-be-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: MySQL
        run: which mysql
      - name: Install dependencies
        run: npm install
      - name: Lint
        run: npm run lint
      - name: Compile
        run: npm run tsc
      - name: Build
        run: npm run build
      - name: Test
        run: npm run test
      - name: E2E Test - Start Database Service
        run: sudo systemctl start mysql.service
      - name: E2E Test - Setup Database & Run
        run: |
          npm run db:test:create
          npm run db:test:setup
          npm run test:e2e
  be-golang-pipeline:
    name: Backend(Golang) Pipeline
    runs-on: ubuntu-latest
    env:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_HOST: localhost
    defaults:
      run:
       working-directory: ./api/rest/golang
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.3'
      - name: Install dependencies
        run: go mod tidy
      - name: Run tests
        run: go test ./...
